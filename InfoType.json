{
  "type": "object",
  "format": "table",
  "required": [
    "name"
  ],
  "properties": {
    "Identifier": {
      "type": "string",
      "net.cnri.repository": {
        "type": {
          "autoGeneratedField": "handle"
        }
      }
    },
    "name": {
      "type": "string",
      "maxLength": 128,
      "title": "Type Name",
      "pattern": "^([!-~])+$",
      "description": "please use printable ascii characters without blank",
      "net.cnri.repository": {
        "preview": {
          "showInPreview": true,
          "isPrimary": true
        }
      }
    },
    "description": {
      "type": "string",
      "maxLength": 2048,
      "title": "Description",
      "pattern": "(.|\n)*",
      "net.cnri.repository": {
        "preview": {
          "showInPreview": true,
          "isPrimary": true
        }
      }
    },
    "versioning": {
      "type": "object",
      "title": "Versioning",
      "properties": {
        "version": {
          "type": "string",
          "title": "Version"
        },
        "previousVersion": {
          "title": "Previous Version",
          "cordra": {
            "type": {
              "handleReference": {
                "types": [
                  "BasicInfoType",
                  "InfoType"
                ]
              }
            }
          }
        },
        "nextVersion": {
          "title": "Next Version",
          "cordra": {
            "type": {
              "handleReference": {
                "types": [
                  "BasicInfoType",
                  "InfoType"
                ]
              }
            }
          }
        }
      }
    },
    "provenance": {
      "type": "object",
      "title": "Provenance",
      "properties": {
        "createdBy": {
          "type": "string",
          "title": "Created By",
          "cordra": {
            "type": {
              "autoGeneratedField": "createdBy"
            }
          }
        },
        "modifiedBy": {
          "type": "string",
          "title": "Modified By",
          "cordra": {
            "type": {
              "autoGeneratedField": "modifiedBy"
            }
          }
        },
        "creationDate": {
          "title": "Creation Date",
          "type": "string",
          "format": "datetime",
          "net.cnri.repository": {
            "type": {
              "autoGeneratedField": "creationDate"
            }
          }
        },
        "lastModificationDate": {
          "title": "Last Modification Date",
          "type": "string",
          "format": "datetime",
          "net.cnri.repository": {
            "type": {
              "autoGeneratedField": "modificationDate"
            }
          }
        }
      }
    },
    "Aliases": {
      "description": "Provide a list of aliases that can be used to identify type. This list will be used for the search functionalities",
      "title": "Aliases",
      "type": "array",
      "items": {
        "title": "Alias",
        "type": "string"
      }
    },
    "Taxonomies": {
      "type": "array",
      "title": "Taxonomies",
      "description": "Taxonomy nodes that this type should be assigned to.",
      "items": {
        "title": "Taxonomy",
        "cordra": {
          "type": {
            "handleReference": {
              "types": [
                "TaxonomyNode"
              ]
            }
          }
        }
      }
    },
    "ExpectedUse": {
      "title": "Expected Use",
      "type": "string",
      "format": "textarea",
      "maxLength": 1024
    },
    "Schema": {
      "title": "Schema",
      "properties": {
        "Properties": {
          "title": "Select Complex Datatype",
          "anyOf": [
            {
              "description": "The actual properties describing the schema of the type. Differentiate between objects and arrays. While objects can have simple arrays as properties set by the cardinality, a standalone array or an array with more refined settings can be created as array type.",
              "type": "object",
              "title": "Object",
              "required": [
                "Type"
              ],
              "properties": {
                "Type": {
                  "title": "Type",
                  "description": "Necessary Field to include the type in the JSON output.",
                  "type": "string",
                  "readOnly": true,
                  "enum": [
                    "Object"
                  ]
                },
                "addProps": {
                  "description": "Allow properties in an object in addition to those mentioned in the type.",
                  "type": "boolean",
                  "title": "Allow additional Properties"
                },
                "subCond": {
                  "title": "Subschema Condition",
                  "type": "string",
                  "enum": [
                    "oneOf",
                    "allOf",
                    "anyOf"
                  ],
                  "description": "If necessary, select a condition to apply for the set of subschemas."
                },
                "Properties": {
                  "title": "Properties",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Property",
                    "required": [
                      "Name",
                      "Type"
                    ],
                    "properties": {
                      "Name": {
                        "title": "Name",
                        "type": "string"
                      },
                      "Title": {
                        "description": "If desired, add a title to the schema field.",
                        "title": "Title",
                        "type": "string"
                      },
                      "Description": {
                        "title": "Description",
                        "description": "A custom description to override the description of the underlying type in the schema",
                        "type": "string",
                        "format": "textarea"
                      },
                      "Type": {
                        "title": "Type",
                        "type": "string",
                        "cordra": {
                          "type": {
                            "handleReference": {
                              "types": [
                                "BasicInfoType",
                                "InfoType"
                              ]
                            }
                          }
                        }
                      },
                      "Properties": {
                        "type": "object",
                        "format": "table",
                        "required": [
                          "Cardinality"
                        ],
                        "properties": {
                          "Const Value": {
                            "description": "Optional field. Sets a constant value that must be present in this field for all instances of this type.",
                            "format": "table",
                            "type": "string"
                          },
                          "Cardinality": {
                            "description": "The cardinality of the property, also describes the obligation. A cardinality of 0 - n defines an optional array, cardinality 1 - n defines a mandatory array.",
                            "type": "string",
                            "enum": [
                              "0 - 1",
                              "1",
                              "0 - n",
                              "1 - n"
                            ]
                          },
                          "extractProperties": {
                            "title": "Extract Properties",
                            "description": "If true and the selected type is an InfoType object, extract all its properties and use them on their own. This does not create an object for the type but takes those sub-properties to the current level.",
                            "type": "boolean",
                            "default": false
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "description": "The actual properties describing the schema of the type. Differentiate between objects and arrays. While objects can have simple arrays as properties set by the cardinality, a standalone array or an array with more refined settings can be created as array type.",
              "type": "object",
              "title": "Array",
              "required": [
                "Type"
              ],
              "properties": {
                "Type": {
                  "title": "Type",
                  "description": "Necessary Field to include the type in the JSON output.",
                  "type": "string",
                  "readOnly": true,
                  "enum": [
                    "Array"
                  ]
                },
                "Description": {
                  "title": "Description",
                  "description": "A custom description to override the description of the underlying type in the schema",
                  "type": "string",
                  "format": "textarea"
                },
                "subCond": {
                  "title": "Type",
                  "type": "string",
                  "description": "The type of the items in the array. Must be a BasicType or an InfoType.",
                  "cordra": {
                    "type": {
                      "handleReference": {
                        "types": [
                          "BasicInfoType",
                          "InfoType"
                        ]
                      }
                    }
                  }
                },
                "unique": {
                  "title": "Unique Items",
                  "type": "boolean",
                  "default": false,
                  "description": "If true, items in the array must be unique."
                },
                "minItems": {
                  "title": "Min Items",
                  "type": "integer",
                  "description": "The minimum amount of items in the array."
                },
                "maxItems": {
                  "title": "Max Items",
                  "type": "integer",
                  "description": "The maximum amount of items in the array. If both min and max items are 0 these conditions do not apply."
                }
              }
            }
          ]
        }
      }
    }
  }
}
